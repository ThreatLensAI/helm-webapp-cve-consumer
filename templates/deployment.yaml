apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm-webapp-cve-consumer.fullname" . }}-deployment
  namespace: '{{ .Release.Namespace }}'
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "helm-webapp-cve-consumer.selectorLabels" . | nindent 6 }}
      {{- with .Values.podLabels }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  template:
    metadata:
      labels:
        {{- include "helm-webapp-cve-consumer.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "helm-webapp-cve-consumer.serviceAccountName" . }}
      restartPolicy: "Always"
      imagePullSecrets:
        - name: {{ include "helm-webapp-cve-consumer.fullname" . }}-secrets

      initContainers:
        {{- range .Values.initContainers }}
        - name: {{ .name }}
          image: "{{ .repository }}:{{ .tag | default "latest" }}"
          imagePullPolicy: {{ .pullPolicy | default "Always" }}
          command: {{ .command }}
          args: {{ .args }}
          envFrom:
            - secretRef:
                name: {{ include "helm-webapp-cve-consumer.fullname" $ }}-db-secrets
        {{- end }}

      {{- if .Values.affinity.enable }}
      affinity:
        {{- include "helm-webapp-cve-consumer.affinity" . | nindent 8 }}
      {{- end }}

      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | default "Always" }}
        envFrom:
          - secretRef:
              name: {{ include "helm-webapp-cve-consumer.fullname" . }}-consumer-secrets
          - configMapRef:
              name: {{ include "helm-webapp-cve-consumer.fullname" . }}-consumer-configmap
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        readinessProbe:
          httpGet:
            port: {{ .Values.env.PORT | atoi }}
            path: {{ (.Values.pod.readinessProbe).path | default "/" | quote }}
          failureThreshold: {{ (.Values.pod.readinessProbe).failureThreshold | default 6 }}
          successThreshold: {{ (.Values.pod.readinessProbe).successThreshold | default 2 }}
          periodSeconds: {{ (.Values.pod.readinessProbe).periodSeconds | default 10 }}
        
        livenessProbe:
          httpGet:
            port: {{ .Values.env.PORT | atoi }}
            path: {{ (.Values.pod.livenessProbe).path | default "/" | quote }}
          failureThreshold: {{ (.Values.pod.livenessProbe).failureThreshold | default 10 }}
          successThreshold: {{ (.Values.pod.livenessProbe).successThreshold | default 1 }}
          periodSeconds: {{ (.Values.pod.livenessProbe).periodSeconds | default 10 }}
